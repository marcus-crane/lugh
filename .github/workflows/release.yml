name: Create release binaries for lugh

on:
  release:
    types: [published]

jobs:
  release-matrix:
    name: release lugh binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: oprypin/install-crystal@v1
        with:
          crystal: 1.0.0
      - run: shards install
      - run: crystal spec
      - run: shards build --release
      - name: Compress binary
        uses: master-atul/tar-action@v1.0.2
        with:
          command: c
          cwd: .
          files: bin/lugh
          outPath: lugh-$(uname | tr '[:upper:]' '[:lower:]')-${{ github.event.release.tag_name }}.tar.gz
      - uses: octokit/request-action@v2.x
        name: Get latest release from API
        id: get_latest_release
        with:
          route: GET /repos/{owner}/{repo}/releases/latest
          owner: marcus-crane
          repo: lugh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get release URL
        id: get_upload_url
        run: |
          url=$(echo "$response" | jq -r '.upload_url')
          echo "::set-output name=url::$url"
        env:
          response:  ${{ steps.get_latest_release.outputs.data }}
      - name: Upload a Release Asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url:  ${{ steps.get_upload_url.outputs.url }}
          asset_path: ./lugh-$(uname | tr '[:upper:]' '[:lower:]')-${{ github.event.release.tag_name }}.tar.gz
          asset_name: lugh-$(uname | tr '[:upper:]' '[:lower:]')-${{ github.event.release.tag_name }}.tar.gz
          asset_content_type: application/gzip
